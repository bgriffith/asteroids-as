/*******************	Preloader *** ****************//* Notes:** This class controls the preloader** Original preloader code from:** http://asgamer.com/2009/making-a-complete-flash-game-creating-understanding-the-preloader*/package com{	// Import flash classes	import flash.display.LoaderInfo;	import flash.display.MovieClip;	import flash.text.*;	import flash.events.*; 	public class ThePreloader extends MovieClip{ 		private var loadText:TextField;		public var ldrInfo:LoaderInfo;  		// Constructor		public function ThePreloader(ldrInfo:LoaderInfo = null){			this.ldrInfo = ldrInfo; 			// Set a listener that will run the given function on each frame			addEventListener(Event.ENTER_FRAME, checkLoad);			// Set up a text field			loadText = new TextField();			// Assign properties to text field			loadText.width = 225;			loadText.height = 160;			loadText.text = "Loading"			loadText.x = 225;			loadText.y =  160;			// Format..			loadText.setTextFormat(textFormat());			// Add to display object list			addChild(loadText);		}				// A function to set the format		public function textFormat():TextFormat{			var format:TextFormat = new TextFormat();			format.font = "Orator Std";			format.color = 0xffffff;			format.size = 16;			format.bold = true;			return format;		}				private function checkLoad(e:Event):void{			// If the total bytes loaded is equal to the bytes total then load is complete..			if (ldrInfo.bytesLoaded == ldrInfo.bytesTotal && ldrInfo.bytesTotal != 0){				// Remove the listener				removeEventListener(Event.ENTER_FRAME, checkLoad);				// Dispatch a new event				dispatchEvent(new Event("loadComplete"));			}			// Update the progress bar			updateLoader(ldrInfo.bytesLoaded, ldrInfo.bytesTotal);		} 				// A function that gets all from the checkLoad loop and which updates the progress bar		private function updateLoader(loaded:Number, total:Number):void{			// A new variable to store our percentage			var percent:Number = Math.round((loaded / total )*100 );			trace(percent + " %");			// Draw rectangle			this.graphics.clear();			this.graphics.lineStyle(1, 0xffffff, 1);			this.graphics.beginFill(0xffffff);			// Increase the length with percent loaded			this.graphics.drawRect(100,200,percent*3,10);				this.graphics.endFill();			// Draw rectangle stroke			this.graphics.lineStyle(1, 0xffffff, 1);			this.graphics.drawRect(98,198,302,14);			}	}}